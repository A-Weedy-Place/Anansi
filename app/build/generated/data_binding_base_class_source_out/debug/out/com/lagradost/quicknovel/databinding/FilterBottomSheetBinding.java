// Generated by view binder compiler. Do not edit!
package com.lagradost.quicknovel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.lagradost.quicknovel.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FilterBottomSheetBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton filterButton;

  @NonNull
  public final Spinner filterGeneralSpinner;

  @NonNull
  public final TextView filterGeneralText;

  @NonNull
  public final Spinner filterOrderSpinner;

  @NonNull
  public final TextView filterOrderText;

  @NonNull
  public final Spinner filterTagSpinner;

  @NonNull
  public final TextView filterTagText;

  private FilterBottomSheetBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton filterButton, @NonNull Spinner filterGeneralSpinner,
      @NonNull TextView filterGeneralText, @NonNull Spinner filterOrderSpinner,
      @NonNull TextView filterOrderText, @NonNull Spinner filterTagSpinner,
      @NonNull TextView filterTagText) {
    this.rootView = rootView;
    this.filterButton = filterButton;
    this.filterGeneralSpinner = filterGeneralSpinner;
    this.filterGeneralText = filterGeneralText;
    this.filterOrderSpinner = filterOrderSpinner;
    this.filterOrderText = filterOrderText;
    this.filterTagSpinner = filterTagSpinner;
    this.filterTagText = filterTagText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FilterBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FilterBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.filter_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FilterBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.filter_button;
      MaterialButton filterButton = ViewBindings.findChildViewById(rootView, id);
      if (filterButton == null) {
        break missingId;
      }

      id = R.id.filter_general_spinner;
      Spinner filterGeneralSpinner = ViewBindings.findChildViewById(rootView, id);
      if (filterGeneralSpinner == null) {
        break missingId;
      }

      id = R.id.filter_general_text;
      TextView filterGeneralText = ViewBindings.findChildViewById(rootView, id);
      if (filterGeneralText == null) {
        break missingId;
      }

      id = R.id.filter_order_spinner;
      Spinner filterOrderSpinner = ViewBindings.findChildViewById(rootView, id);
      if (filterOrderSpinner == null) {
        break missingId;
      }

      id = R.id.filter_order_text;
      TextView filterOrderText = ViewBindings.findChildViewById(rootView, id);
      if (filterOrderText == null) {
        break missingId;
      }

      id = R.id.filter_tag_spinner;
      Spinner filterTagSpinner = ViewBindings.findChildViewById(rootView, id);
      if (filterTagSpinner == null) {
        break missingId;
      }

      id = R.id.filter_tag_text;
      TextView filterTagText = ViewBindings.findChildViewById(rootView, id);
      if (filterTagText == null) {
        break missingId;
      }

      return new FilterBottomSheetBinding((LinearLayout) rootView, filterButton,
          filterGeneralSpinner, filterGeneralText, filterOrderSpinner, filterOrderText,
          filterTagSpinner, filterTagText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
