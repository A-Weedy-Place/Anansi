// Generated by view binder compiler. Do not edit!
package com.lagradost.quicknovel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.chip.ChipGroup;
import com.lagradost.quicknovel.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ResultReviewBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView reviewAuthor;

  @NonNull
  public final TextView reviewBody;

  @NonNull
  public final ImageView reviewImage;

  @NonNull
  public final ChipGroup reviewTags;

  @NonNull
  public final TextView reviewTime;

  @NonNull
  public final TextView reviewTitle;

  private ResultReviewBinding(@NonNull CardView rootView, @NonNull TextView reviewAuthor,
      @NonNull TextView reviewBody, @NonNull ImageView reviewImage, @NonNull ChipGroup reviewTags,
      @NonNull TextView reviewTime, @NonNull TextView reviewTitle) {
    this.rootView = rootView;
    this.reviewAuthor = reviewAuthor;
    this.reviewBody = reviewBody;
    this.reviewImage = reviewImage;
    this.reviewTags = reviewTags;
    this.reviewTime = reviewTime;
    this.reviewTitle = reviewTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ResultReviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ResultReviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.result_review, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ResultReviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.review_author;
      TextView reviewAuthor = ViewBindings.findChildViewById(rootView, id);
      if (reviewAuthor == null) {
        break missingId;
      }

      id = R.id.review_body;
      TextView reviewBody = ViewBindings.findChildViewById(rootView, id);
      if (reviewBody == null) {
        break missingId;
      }

      id = R.id.review_image;
      ImageView reviewImage = ViewBindings.findChildViewById(rootView, id);
      if (reviewImage == null) {
        break missingId;
      }

      id = R.id.review_tags;
      ChipGroup reviewTags = ViewBindings.findChildViewById(rootView, id);
      if (reviewTags == null) {
        break missingId;
      }

      id = R.id.review_time;
      TextView reviewTime = ViewBindings.findChildViewById(rootView, id);
      if (reviewTime == null) {
        break missingId;
      }

      id = R.id.review_title;
      TextView reviewTitle = ViewBindings.findChildViewById(rootView, id);
      if (reviewTitle == null) {
        break missingId;
      }

      return new ResultReviewBinding((CardView) rootView, reviewAuthor, reviewBody, reviewImage,
          reviewTags, reviewTime, reviewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
