// Generated by view binder compiler. Do not edit!
package com.lagradost.quicknovel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lagradost.quicknovel.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HistoryResultCompactBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView backgroundCard;

  @NonNull
  public final ImageView historyDelete;

  @NonNull
  public final TextView historyExtraText;

  @NonNull
  public final FrameLayout historyOpenBtt;

  @NonNull
  public final ImageView historyPlay;

  @NonNull
  public final TextView imageText;

  @NonNull
  public final ImageView imageView;

  private HistoryResultCompactBinding(@NonNull LinearLayout rootView,
      @NonNull CardView backgroundCard, @NonNull ImageView historyDelete,
      @NonNull TextView historyExtraText, @NonNull FrameLayout historyOpenBtt,
      @NonNull ImageView historyPlay, @NonNull TextView imageText, @NonNull ImageView imageView) {
    this.rootView = rootView;
    this.backgroundCard = backgroundCard;
    this.historyDelete = historyDelete;
    this.historyExtraText = historyExtraText;
    this.historyOpenBtt = historyOpenBtt;
    this.historyPlay = historyPlay;
    this.imageText = imageText;
    this.imageView = imageView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HistoryResultCompactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HistoryResultCompactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.history_result_compact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HistoryResultCompactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backgroundCard;
      CardView backgroundCard = ViewBindings.findChildViewById(rootView, id);
      if (backgroundCard == null) {
        break missingId;
      }

      id = R.id.history_delete;
      ImageView historyDelete = ViewBindings.findChildViewById(rootView, id);
      if (historyDelete == null) {
        break missingId;
      }

      id = R.id.history_extra_text;
      TextView historyExtraText = ViewBindings.findChildViewById(rootView, id);
      if (historyExtraText == null) {
        break missingId;
      }

      id = R.id.history_open_btt;
      FrameLayout historyOpenBtt = ViewBindings.findChildViewById(rootView, id);
      if (historyOpenBtt == null) {
        break missingId;
      }

      id = R.id.history_play;
      ImageView historyPlay = ViewBindings.findChildViewById(rootView, id);
      if (historyPlay == null) {
        break missingId;
      }

      id = R.id.imageText;
      TextView imageText = ViewBindings.findChildViewById(rootView, id);
      if (imageText == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      return new HistoryResultCompactBinding((LinearLayout) rootView, backgroundCard, historyDelete,
          historyExtraText, historyOpenBtt, historyPlay, imageText, imageView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
